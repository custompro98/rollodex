---
const q = Astro.url.searchParams.get("q");

const cars = [
  { number: 95, name: "Lightning McQueen" },
  { number: 95, name: "Lightning McQueen" },
  { number: 95, name: "Lightning McQueen" },
  { number: 95, name: "Lightning McQueen" },
  { number: 95, name: "Lightning McQueen" },
  { number: 95, name: "Lightning McQueen" },
  { number: 95, name: "Lightning McQueen" },
].filter((car) => {
  if (!q) return true;

  return (
    car.number.toString().startsWith(q) ||
    car.name.toLowerCase().startsWith(q.toLowerCase())
  );
});
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Roll-odex</title>
  </head>
  <body class="text-slate-700 max-w-7xl mx-auto">
    <header></header>
    <main class="pt-4">
      <a href="/">
        <h1 class="text-2xl">The Cars Roll-odex</h1>
      </a>
      <div class="min-w-96 flex flex-col gap-4">
        <div class="pt-2 relative mx-auto">
          <form method="get">
            <input
              class="border border-black bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none"
              type="search"
              name="q"
              value={q}
              placeholder="Search"
            />
            <button type="submit" class="absolute right-0 top-0 mt-5 mr-4">
              <svg
                class="text-slate-700 h-4 w-4 fill-current"
                xmlns="http://www.w3.org/2000/svg"
                xmlns:xlink="http://www.w3.org/1999/xlink"
                version="1.1"
                id="Capa_1"
                x="0px"
                y="0px"
                viewBox="0 0 56.966 56.966"
                style="enable-background:new 0 0 56.966 56.966;"
                xml:space="preserve"
                width="512px"
                height="512px"
              >
                <path
                  d="M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z"
                ></path>
              </svg>
            </button>
          </form>
        </div>
        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mx-auto"
        >
          {
            cars.map((car) => {
              return (
                <div class="border border-black aspect-square w-64 flex flex-col-reverse items-center p-2">
                  <p>
                    {car.name} ({car.number})
                  </p>
                </div>
              );
            })
          }
        </div>
      </div>
      <footer></footer>
    </main>
  </body>
</html>
